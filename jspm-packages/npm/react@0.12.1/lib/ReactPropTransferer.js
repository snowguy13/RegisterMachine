/* */
"format cjs";!function(e){"use strict";function t(e){return function(t,n,r){t[n]=t.hasOwnProperty(n)?e(t[n],r):r}}function n(e,t){for(var n in t)if(t.hasOwnProperty(n)){var r=l[n];r&&l.hasOwnProperty(n)?r(e,n,t[n]):e.hasOwnProperty(n)||(e[n]=t[n])}return e}var r=require("./Object.assign"),o=require("./emptyFunction"),a=require("./invariant"),i=require("./joinClasses"),s=require("./warning"),u=!1,c=t(function(e,t){return r({},t,e)}),l={children:o,className:t(i),style:c},p={TransferStrategies:l,mergeProps:function(e,t){return n(r({},e),t)},Mixin:{transferPropsTo:function(t){return"production"!==e.env.NODE_ENV?a(t._owner===this,"%s: You can't call transferPropsTo() on a component that you don't own, %s. This usually means you are calling transferPropsTo() on a component passed in as props or children.",this.constructor.displayName,"string"==typeof t.type?t.type:t.type.displayName):a(t._owner===this),"production"!==e.env.NODE_ENV&&(u||(u=!0,"production"!==e.env.NODE_ENV?s(!1,"transferPropsTo is deprecated. See http://fb.me/react-transferpropsto for more information."):null)),n(t.props,this.props),t}}};module.exports=p}(require("github:jspm/nodelibs@0.0.3/process"));
//# sourceMappingURL=ReactPropTransferer.js.map