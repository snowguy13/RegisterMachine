/* */
"format cjs";!function(e){"use strict";function t(t){"production"!==e.env.NODE_ENV?s(null==t.props.checkedLink||null==t.props.valueLink,"Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa."):s(null==t.props.checkedLink||null==t.props.valueLink)}function n(n){t(n),"production"!==e.env.NODE_ENV?s(null==n.props.value&&null==n.props.onChange,"Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink."):s(null==n.props.value&&null==n.props.onChange)}function r(n){t(n),"production"!==e.env.NODE_ENV?s(null==n.props.checked&&null==n.props.onChange,"Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink"):s(null==n.props.checked&&null==n.props.onChange)}function o(e){this.props.valueLink.requestChange(e.target.value)}function a(e){this.props.checkedLink.requestChange(e.target.checked)}var i=require("./ReactPropTypes"),s=require("./invariant"),u={button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0},c={Mixin:{propTypes:{value:function(e,t){return!e[t]||u[e.type]||e.onChange||e.readOnly||e.disabled?void 0:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t){return!e[t]||e.onChange||e.readOnly||e.disabled?void 0:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:i.func}},getValue:function(e){return e.props.valueLink?(n(e),e.props.valueLink.value):e.props.value},getChecked:function(e){return e.props.checkedLink?(r(e),e.props.checkedLink.value):e.props.checked},getOnChange:function(e){return e.props.valueLink?(n(e),o):e.props.checkedLink?(r(e),a):e.props.onChange}};module.exports=c}(require("github:jspm/nodelibs@0.0.3/process"));
//# sourceMappingURL=LinkedValueUtils.js.map