/* */
"format cjs";!function(e){"use strict";function t(){var e=!l||!l.traverseTwoPhase||!l.traverseEnterLeave;if(e)throw new Error("InstanceHandle not injected before use!")}var n=require("./EventPluginRegistry"),r=require("./EventPluginUtils"),o=require("./accumulateInto"),a=require("./forEachAccumulated"),i=require("./invariant"),s={},u=null,c=function(e){if(e){var t=r.executeDispatch,o=n.getPluginModuleForEvent(e);o&&o.executeDispatch&&(t=o.executeDispatch),r.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e)}},l=null,p={injection:{injectMount:r.injection.injectMount,injectInstanceHandle:function(n){l=n,"production"!==e.env.NODE_ENV&&t()},getInstanceHandle:function(){return"production"!==e.env.NODE_ENV&&t(),l},injectEventPluginOrder:n.injectEventPluginOrder,injectEventPluginsByName:n.injectEventPluginsByName},eventNameDispatchConfigs:n.eventNameDispatchConfigs,registrationNameModules:n.registrationNameModules,putListener:function(t,n,r){"production"!==e.env.NODE_ENV?i(!r||"function"==typeof r,"Expected %s listener to be a function, instead got type %s",n,typeof r):i(!r||"function"==typeof r);var o=s[n]||(s[n]={});o[t]=r},getListener:function(e,t){var n=s[t];return n&&n[e]},deleteListener:function(e,t){var n=s[t];n&&delete n[e]},deleteAllListeners:function(e){for(var t in s)delete s[t][e]},extractEvents:function(e,t,r,a){for(var i,s=n.plugins,u=0,c=s.length;c>u;u++){var l=s[u];if(l){var p=l.extractEvents(e,t,r,a);p&&(i=o(i,p))}}return i},enqueueEvents:function(e){e&&(u=o(u,e))},processEventQueue:function(){var t=u;u=null,a(t,c),"production"!==e.env.NODE_ENV?i(!u,"processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."):i(!u)},__purge:function(){s={}},__getListenerBank:function(){return s}};module.exports=p}(require("github:jspm/nodelibs@0.0.3/process"));
//# sourceMappingURL=EventPluginHub.js.map